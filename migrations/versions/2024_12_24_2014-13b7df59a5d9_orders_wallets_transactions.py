"""orders_wallets_transactions

Revision ID: 13b7df59a5d9
Revises: e926c6885aca
Create Date: 2024-12-24 20:14:26.050773

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "13b7df59a5d9"
down_revision: Union[str, None] = "e926c6885aca"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "wallets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("balance", sa.Float(asdecimal=True), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_wallets_id"), "wallets", ["id"], unique=False)
    op.create_index(
        op.f("ix_wallets_user_id"), "wallets", ["user_id"], unique=False
    )
    op.create_table(
        "servers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("provider_id", sa.UUID(), nullable=False),
        sa.Column("pricing_plan_id", sa.UUID(), nullable=False),
        sa.Column(
            "server_status",
            sa.Enum("WORKING", "STOPPED", "CANCELLED", name="serverstatus"),
            nullable=True,
        ),
        sa.Column("additional_info", sa.JSON(), nullable=True),
        sa.Column("next_payment_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pricing_plan_id"],
            ["pricing_plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["providers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_servers_pricing_plan_id"),
        "servers",
        ["pricing_plan_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_servers_user_id"), "servers", ["user_id"], unique=False
    )
    op.create_table(
        "transactions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("wallet_id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING", "CANCELLED", "SUCCESS", name="transactionstatus"
            ),
            nullable=False,
        ),
        sa.Column("amount", sa.Float(asdecimal=True), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum(
                "DEPOSIT", "WITHDRAW", "SERVER_PAYMENT", name="transactiontype"
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["wallet_id"],
            ["wallets.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transactions_wallet_id"),
        "transactions",
        ["wallet_id"],
        unique=False,
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("pricing_plan_id", sa.UUID(), nullable=False),
        sa.Column("server_id", sa.UUID(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("PENDING", "COMPLETED", "CANCELLED", name="orderstatus"),
            nullable=False,
        ),
        sa.Column("total_price", sa.DECIMAL(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("paid_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pricing_plan_id"],
            ["pricing_plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["server_id"],
            ["servers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_orders_user_id"), "orders", ["user_id"], unique=False
    )
    op.alter_column(
        "features",
        "core_frequency",
        existing_type=sa.NUMERIC(),
        type_=sa.Float(asdecimal=True),
        existing_nullable=True,
    )
    op.alter_column(
        "features",
        "disk",
        existing_type=sa.NUMERIC(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    op.alter_column(
        "features",
        "network_speed",
        existing_type=sa.NUMERIC(),
        type_=sa.Float(asdecimal=True),
        existing_nullable=True,
    )
    currency = postgresql.ENUM("RUB", "USD", "EUR", name="currency")
    currency.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "pricing_plans",
        sa.Column(
            "currency",
            currency
        ),
    )
    op.alter_column(
        "pricing_plans",
        "price",
        existing_type=sa.NUMERIC(),
        type_=sa.Float(asdecimal=True),
        existing_nullable=False,
    )
    op.alter_column(
        "providers",
        "rating",
        existing_type=sa.NUMERIC(),
        type_=sa.Float(asdecimal=True),
        existing_nullable=False,
    )
    op.alter_column(
        "reviews",
        "rating",
        existing_type=sa.INTEGER(),
        type_=sa.Float(asdecimal=True),
        existing_nullable=False,
    )
    op.drop_column("users", "balance")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "balance", sa.NUMERIC(), autoincrement=False, nullable=False
        ),
    )
    op.alter_column(
        "reviews",
        "rating",
        existing_type=sa.Float(asdecimal=True),
        type_=sa.INTEGER(),
        existing_nullable=False,
    )
    op.alter_column(
        "providers",
        "rating",
        existing_type=sa.Float(asdecimal=True),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "pricing_plans",
        "price",
        existing_type=sa.Float(asdecimal=True),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.drop_column("pricing_plans", "currency")
    op.alter_column(
        "features",
        "network_speed",
        existing_type=sa.Float(asdecimal=True),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.alter_column(
        "features",
        "disk",
        existing_type=sa.Integer(),
        type_=sa.NUMERIC(),
        existing_nullable=False,
    )
    op.alter_column(
        "features",
        "core_frequency",
        existing_type=sa.Float(asdecimal=True),
        type_=sa.NUMERIC(),
        existing_nullable=True,
    )
    op.drop_index(op.f("ix_orders_user_id"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_transactions_wallet_id"), table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(op.f("ix_servers_user_id"), table_name="servers")
    op.drop_index(op.f("ix_servers_pricing_plan_id"), table_name="servers")
    op.drop_table("servers")
    op.drop_index(op.f("ix_wallets_user_id"), table_name="wallets")
    op.drop_index(op.f("ix_wallets_id"), table_name="wallets")
    op.drop_table("wallets")
    # ### end Alembic commands ###

"""initial migration

Revision ID: 124ef7961663
Revises: 
Create Date: 2024-12-22 12:09:57.968556

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "124ef7961663"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "features",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("processor_name", sa.String(length=50), nullable=False),
        sa.Column("cores", sa.Integer(), nullable=False),
        sa.Column("core_frequency", sa.DECIMAL(), nullable=True),
        sa.Column("ram", sa.DECIMAL(), nullable=False),
        sa.Column(
            "ram_type",
            sa.Enum("DDR3", "DDR4", "DDR5", name="ramtype"),
            nullable=False,
        ),
        sa.Column("disk", sa.DECIMAL(), nullable=False),
        sa.Column(
            "disk_type",
            sa.Enum("HDD", "SSD", "NVME", name="disktype"),
            nullable=False,
        ),
        sa.Column("network_speed", sa.DECIMAL(), nullable=False),
        sa.Column("network_limit", sa.Integer(), nullable=False),
        sa.Column("location", sa.String(length=40), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_features_id"), "features", ["id"], unique=False)
    op.create_table(
        "providers",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("logo_url", sa.String(), nullable=False),
        sa.Column("website_url", sa.String(), nullable=False),
        sa.Column("sla_details", sa.String(), nullable=False),
        sa.Column("rating", sa.DECIMAL(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_providers_id"), "providers", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", mysql.VARCHAR(length=70), nullable=False),
        sa.Column("email_confirmed", sa.Boolean(), nullable=True),
        sa.Column(
            "account_type",
            sa.Enum("PHYSICAL", "COMPANY", name="accounttype"),
            nullable=True,
        ),
        sa.Column("balance", sa.DECIMAL(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "pricing_plans",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("provider_id", sa.UUID(), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.Column("price", sa.DECIMAL(), nullable=False),
        sa.Column(
            "billing_cycle",
            sa.Enum("MONTHLY", "ANNUALLY", name="billingcycle"),
            nullable=False,
        ),
        sa.Column(
            "server_type",
            sa.Enum("VIRTUAL", "DEDICATED", name="servertype"),
            nullable=False,
        ),
        sa.Column("features_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["features_id"],
            ["features.id"],
        ),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["providers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pricing_plans_id"), "pricing_plans", ["id"], unique=False
    )
    op.create_table(
        "reviews",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("comment", sa.String(length=300), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "REJECTED", "APPROVED", name="reviewstatus"),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("provider_id", sa.UUID(), nullable=False),
        sa.Column("pricing_plan_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pricing_plan_id"],
            ["pricing_plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["provider_id"],
            ["providers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_reviews_id"), "reviews", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_reviews_id"), table_name="reviews")
    op.drop_table("reviews")
    op.drop_index(op.f("ix_pricing_plans_id"), table_name="pricing_plans")
    op.drop_table("pricing_plans")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_providers_id"), table_name="providers")
    op.drop_table("providers")
    op.drop_index(op.f("ix_features_id"), table_name="features")
    op.drop_table("features")
    # ### end Alembic commands ###
